version: "3.8"
services:
  api:
    container_name: api
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - './backend:/app'
      - '/app/node_modules'
    stdin_open: true
    tty: true
    ports:
      - '28001:3000'
    restart: always
    command: "npm start"

  web:
    container_name: web
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        PROFILE: test
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    stdin_open: true
    tty: true
    ports:
      - '28002:80'
    restart: always

  db:
    container_name: db
    image: kartoza/postgis:12.0
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=wrU4L@82nYVH6qBv
      - POSTGRES_DBNAME=mapyzerdb
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,btree_gist,hstore,postgis_topology,postgis_raster,postgis_sfcgal,fuzzystrmatch,address_standardizer,address_standardizer_data_us,postgis_tiger_geocoder
    ports:
      - "28003:5432"
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./scripts/1-modBDGeo-types.sql:/docker-entrypoint-initdb.d/1-modBDGeo-types.sql
      - ./scripts/2-modBDGeo-tablas.sql:/docker-entrypoint-initdb.d/2-modBDGeo-tablas.sql
      - ./scripts/3-modBDGeo-fks.sql:/docker-entrypoint-initdb.d/3-modBDGeo-fks.sql
      - ./scripts/4-inserts.sql:/docker-entrypoint-initdb.d/4-inserts.sql
      - ./scripts/6-inserts-ciclistas.sql:/docker-entrypoint-initdb.d/6-inserts-ciclistas.sql

